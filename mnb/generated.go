package mnb

// Generated by https://github.com/cloudescape/gowsdl
// Do not modify
// Copyright (c) 2014, Cloudescape. All rights reserved.
import (
	"encoding/xml"

	gowsdl "github.com/tgulacsi/gowsdl/generator"
	"time"
)

// against "unused imports"
var _ time.Time

type GetInfo struct {
}

type GetInfoResponse struct {
	GetInfoResult string `xml:"GetInfoResult,omitempty"`
}

type GetCurrentExchangeRates struct {
}

type GetCurrentExchangeRatesResponse struct {
	GetCurrentExchangeRatesResult string `xml:"GetCurrentExchangeRatesResult,omitempty"`
}

type GetExchangeRates struct {
	XMLName       xml.Name `xml:"http://www.mnb.hu/webservices/ GetExchangeRates"`
	StartDate     string   `xml:"startDate,omitempty"`
	EndDate       string   `xml:"endDate,omitempty"`
	CurrencyNames string   `xml:"currencyNames,omitempty"`
}

type GetExchangeRatesResponse struct {
	GetExchangeRatesResult string `xml:"GetExchangeRatesResult,omitempty"`
}

type GetDateInterval struct {
}

type GetDateIntervalResponse struct {
	GetDateIntervalResult string `xml:"GetDateIntervalResult,omitempty"`
}

type GetCurrencies struct {
}

type GetCurrenciesResponse struct {
	GetCurrenciesResult string `xml:"GetCurrenciesResult,omitempty"`
}

type GetCurrencyUnits struct {
	CurrencyNames string `xml:"currencyNames,omitempty"`
}

type GetCurrencyUnitsResponse struct {
	GetCurrencyUnitsResult string `xml:"GetCurrencyUnitsResult,omitempty"`
}

type MNBArfolyamServiceSoap struct {
	client *gowsdl.SoapClient
}

func NewMNBArfolyamServiceSoap(url string, tls bool) *MNBArfolyamServiceSoap {
	if url == "" {
		url = "http://www.mnb.hu/arfolyamok.asmx"
	}
	client := gowsdl.NewSoapClient(url, tls)

	return &MNBArfolyamServiceSoap{
		client: client,
	}
}

func (service *MNBArfolyamServiceSoap) GetInfo(request *GetInfo) (*GetInfoResponse, error) {
	response := &GetInfoResponse{}
	err := service.client.Call("http://www.mnb.hu/webservices/GetInfo", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *MNBArfolyamServiceSoap) GetCurrentExchangeRates(request *GetCurrentExchangeRates) (*GetCurrentExchangeRatesResponse, error) {
	response := &GetCurrentExchangeRatesResponse{}
	err := service.client.Call("http://www.mnb.hu/webservices/GetCurrentExchangeRates", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *MNBArfolyamServiceSoap) GetExchangeRates(request *GetExchangeRates) (*GetExchangeRatesResponse, error) {
	response := &GetExchangeRatesResponse{}
	err := service.client.Call("http://www.mnb.hu/webservices/GetExchangeRates", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *MNBArfolyamServiceSoap) GetDateInterval(request *GetDateInterval) (*GetDateIntervalResponse, error) {
	response := &GetDateIntervalResponse{}
	err := service.client.Call("http://www.mnb.hu/webservices/GetDateInterval", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *MNBArfolyamServiceSoap) GetCurrencies(request *GetCurrencies) (*GetCurrenciesResponse, error) {
	response := &GetCurrenciesResponse{}
	err := service.client.Call("http://www.mnb.hu/webservices/GetCurrencies", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *MNBArfolyamServiceSoap) GetCurrencyUnits(request *GetCurrencyUnits) (*GetCurrencyUnitsResponse, error) {
	response := &GetCurrencyUnitsResponse{}
	err := service.client.Call("http://www.mnb.hu/webservices/GetCurrencyUnits", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}
